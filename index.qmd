---
title: "datathon_winter_2025"
---


B06012PR_002
Estimate!!Total:!!Below 100 percent of the poverty level
Place of Birth by Poverty Status in the Past 12 Months in Puerto Rico
2473
B06012PR_003
Estimate!!Total:!!100 to 149 percent of the poverty level
Place of Birth by Poverty Status in the Past 12 Months in Puerto Rico
2474
B06012PR_004
Estimate!!Total:!!At or above 150 percent of the poverty level
Place of Birth by Poverty Status in the Past 12 Months in 

B06012PR_017
Estimate!!Total:!!Foreign born:
Place of Birth by Poverty Status in the Past 12 Months in Puerto Rico
2488
B06012PR_018
Estimate!!Total:!!Foreign born:!!Below 100 percent of the poverty level
Place of Birth by Poverty Status in the Past 12 Months in Puerto Rico
2489
B06012PR_019
Estimate!!Total:!!Foreign born:!!100 to 149 percent of the poverty level
Place of Birth by Poverty Status in the Past 12 Months in Puerto Rico
2490
B06012PR_020
Estimate!!Total:!!Foreign born:!!At or above 150 percent of the poverty level

B06012_001
Estimate!!Total:
Place of Birth by Poverty Status in the Past 12 Months in the United States
2492
B06012_002
Estimate!!Total:!!Below 100 percent of the poverty level
Place of Birth by Poverty Status in the Past 12 Months in the United States
2493
B06012_003
Estimate!!Total:!!100 to 149 percent of the poverty level
Place of Birth by Poverty Status in the Past 12 Months in the United States
2494
B06012_004
Estimate!!Total:!!At or above 150 percent of the poverty level

```{r}
library(tidycensus)

acs_vars <- load_variables(2023, "acs1", cache = TRUE)
```


```{r}
library(sociome)

raw_data <- get_adi(raw_data_only =
             TRUE, geography="county", year=2023)
adi_data <- calculate_adi(raw_data)

raw_data_2023 <- raw_data

```

```{r}
raw_data_2022 <- get_adi(raw_data_only =
             TRUE, geography="county", year=2022)
adi_data_2022 <- calculate_adi(raw_data)

```


```{r}
data_dict <- acs_vars |>
  filter(name %in% colnames(raw_data))

data_dict

write_csv(data_dict, "raw_data_dictionary.csv")
```

```{r}
library(tidyverse)
write_csv(adi_data, "area_deprivation_index_2023.csv")
write_csv(adi_data_2022, "area_deprivation_index_2022.csv")
```


```{r}
water_insecurity_2022 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-28/water_insecurity_2022.csv')
water_insecurity_2023 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-28/water_insecurity_2023.csv')

# The geometry columns are saved as text with the code to reproduce them.
water_insecurity_2022 <- water_insecurity_2022 |> 
  dplyr::mutate(
    geometry = purrr::map(geometry, \(geo) {
      eval(parse(text = geo))
    } )
  )
water_insecurity_2023 <- water_insecurity_2023 |> 
  dplyr::mutate(
    geometry = purrr::map(geometry, \(geo) {
      eval(parse(text = geo))
    } )
  )
```


```{r}
merged <- water_insecurity_2022 |>
  inner_join(y=adi_data_2022, by=c(geoid="GEOID"))
merged2 <- water_insecurity_2023 |>
  inner_join(y=adi_data, by=c(geoid="GEOID"))

fulldata <- bind_rows(merged, merged2) |>
  separate("name", into=c("county", "state"), sep = ",") |>
  janitor::clean_names()

write_csv(fulldata, "adi-water-insecurity-all.csv")
```




```{r}
save(raw_data_2023, raw_data_2022, water_insecurity_2022, water_insecurity_2023, fulldata, file="water_insecurity.rdata")
```